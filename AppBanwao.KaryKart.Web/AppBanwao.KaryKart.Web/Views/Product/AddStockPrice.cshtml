@{
    ViewBag.Title = "AddStockPrice";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
@model AppBanwao.KaryKart.Web.Models.ProductStockPriceModel
<div class="row">

    <div class="col-md-12">
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Home")">Home</a></li>
            <li><a href="@Url.Action("Index","Product")">Products</a></li>
            <li class="active">Add Stock and Price</li>
        </ul>
    </div>
</div>
<div class="row ">
    <ul class="pagination pagination-lg">
        <li ><a href="#">Product Basic details <i class="fa fa-forward"></i></a></li>
        <li ><a href="#">Features and Images Details <i class="fa fa-forward"></i></a></li>
        <li class="active"><a href="#">Stock and Cost Details <i class="fa fa-stop"></i></a></li>
    </ul>
</div>
<div class="row">
    <h3><i class="fa fa-plus-square-o"></i> Add stock and price</h3>
    <hr />
    <div class="col-md-10">

        @using (Html.BeginForm("AddStockPrice", "Product", FormMethod.Post, new { @class = "form-horizontal", @enctype="multipart/form-data" }))
        {


            @Html.AntiForgeryToken()
            @Html.HiddenFor(m=>m.ProductID)
            <div class="form-group">

                @Html.LabelFor(m => m.Name, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.TextBoxFor(m => m.Name, new {  @class = "form-control",@readonly="readonly"})
                    
                </div>
            </div>
            <div class="form-group">

                @Html.LabelFor(m => m.SizeTypeID, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.DropDownListFor(m => m.SizeTypeID, (SelectList)ViewBag.SizeTypeID, new { @class = "form-control"})
                    
                </div>
            </div>
            <div class="form-group">

                @Html.LabelFor(m => m.SizeID, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.DropDownListFor(m => m.SizeID, (SelectList)ViewBag.SizeID, new { @class = "form-control"})
                </div>
            </div>
            <div class="form-group">

                @Html.LabelFor(m => m.UnitID, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.DropDownListFor(m => m.UnitID, (SelectList)ViewBag.UnitID, new { @class = "form-control"})
                </div>
            </div>
            <div class="form-group">

                @Html.LabelFor(m => m.Stock, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.TextBoxFor(m=>m.Stock, new { @class = "form-control", @placeholder = "e.g. 10" })
                    @Html.ValidationMessageFor(m => m.Stock, null, new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">

                @Html.LabelFor(m => m.CurrencyID, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.DropDownListFor(m => m.CurrencyID, (SelectList)ViewBag.CurrencyID, new { @class = "form-control"})
                    
                </div>
            </div>
            <div class="form-group">

                @Html.LabelFor(m => m.Price, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.TextBoxFor(m=>m.Price, new { @class = "form-control", @placeholder = "e.g. 10" })
                    @Html.ValidationMessageFor(m => m.Price, null, new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">

                @Html.LabelFor(m => m.ShippingCost, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-7">
                    @Html.TextBoxFor(m=>m.ShippingCost, new { @class = "form-control", @placeholder = "e.g. 10" })
                    @Html.ValidationMessageFor(m => m.ShippingCost, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-10 col-lg-offset-3">

                    <button type="submit" class="btn btn-success blueButton">Add <i class="fa fa-plus"></i></button>
                    @*<hr />
                    <a href="@Url.Action("Index","Product")" class="btn btn-danger">Back <i class="fa fa-backward"></i> </a>*@
                </div>
            </div>

        }
    </div>
</div>


<script type="text/javascript">
    var url = '@Url.Action("GetSizes", "Product")'; // Don't hard code your url's!
    var sizes = $('#SizeID'); // cache it
    $("#SizeTypeID").change(function () {
      //  OpenLoader();
        var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
        $.getJSON(url, { id: id }, function (response) {
            sizes.empty(); // remove any existing options
            $.each(response, function (index, item) {
           
                sizes.append($('<option></option>').text(item.Name).val(item.SizeID));
            });
        //    CloseLoader();
        });
    });
</script>